buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url='https://dist.creeper.host/Sponge/maven' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        //classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
//apply plugin: 'org.spongepowered.mixin'

version = '1.15.2-1.0.0.0'
group = 'xfacthd.r6mod' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'r6mod'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20200514-1.15.1'
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            //arg "-mixin.config="+archivesBaseName+".mixins.json"

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.markers', 'SCAN'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                r6mod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            //arg "-mixin.config="+archivesBaseName+".mixins.json"

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.markers', 'SCAN'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                r6mod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.markers', 'SCAN'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'r6mod', '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]

            mods {
                r6mod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.31'
    //compile 'org.spongepowered:mixin:0.8'
}

/*mixin {
    add sourceSets.main, "r6mod.refmap.json"
}*/

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "r6mod",
            "Specification-Vendor": "XFactHD",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "r6mod",
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"XFactHD",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")/*,
            "MixinConfigs": "r6mod.mixins.json"*/
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}